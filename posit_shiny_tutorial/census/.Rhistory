library(shiny)
ui <- page_sidebar(
title = "censusVis",
sidebar = sidebar(
helpText(
"Create demographic maps with information from the 2010 US Census."
),
selectInput(
"var",
label = "Choose a variable to display",
choices =
c("Percent White",
"Percent Black",
"Percent Hispanic",
"Percent Asian"),
selected = "Percent White"
),
sliderInput(
"range",
label = "Range of interest:",
min = 0,
max = 100,
value = c(0, 100)
)
),
textOutput("selected_var")
)
server <- function(input, output) {
output$selected_var <- renderText({
"You have selected this"
})
}
runApp("census-app", display.mode = "showcase")
source('files/data_analytics/jing_calendar/r_files/census-app/app.R')
install.packages("bslib")
install.packages("shiny")
runApp("census-app", display.mode = "showcase")
runApp("app.R", display.mode = "showcase")
runApp("census-app", display.mode = "showcase")
shinyApp(ui = ui, server = server)
runApp("census-app", display.mode = "showcase")
runApp("census-app", display.mode = "showcase")
runApp("census-app", display.mode = "showcase")
runApp("census-app", display.mode = "showcase")
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
"You have selected:",
server <- function(input, output) {
output$selected_var <- renderText({
"You have selected:",
?renderText
server <- function(input, output) {
output$selected_var <- renderText({
"You have selected:";
input$var;
"with a range that goes from";
input$range[1];
"to";
input$range[2]
})
}
ui <- page_sidebar(
title = "censusVis",
sidebar = sidebar(
helpText(
"Create demographic maps with information from the 2010 US Census."
),
selectInput(
"var",
label = "Choose a variable to display",
choices =
c("Percent White",
"Percent Black",
"Percent Hispanic",
"Percent Asian"),
selected = "Percent White"
),
sliderInput(
"range",
label = "Range of interest:",
min = 0,
max = 100,
value = c(0, 100)
)
),
textOutput("selected_var")
)
server <- function(input, output) {
output$selected_var <- renderText({
"You have selected:";
input$var;
"with a range that goes from";
input$range[1];
"to";
input$range[2]
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected:",
input$var,
"with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected:",
input$var,
"with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected:",
input$var,
"with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
ui <- page_sidebar(
title = "censusVis",
sidebar = sidebar(
helpText(
"Create demographic maps with information from the 2010 US Census."
),
selectInput(
"var",
label = "Choose a variable to display",
choices =
c("Percent White",
"Percent Black",
"Percent Hispanic",
"Percent Asian"),
selected = "Percent White"
),
sliderInput(
"range",
label = "Range of interest:",
min = 0,
max = 100,
value = c(0, 100)
)
),
textOutput("selected_var")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected:",
input$var,
"with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected:",
input$var,
"with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected:",
input$var,
"with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected:",
input$var,
" with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected ",
input$var,
" with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected ",
input$var,
" with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected ",
input$var,
" with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected ",
input$var,
" with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected ",
input$var,
" with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected ",
input$var,
" with a range that goes from",
input$range[1],
"to",
input$range[2]
)
}
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$selected_var <- renderText({
paste0("You have selected ",
input$var,
" with a range that goes from ",
input$range[1],
" to ",
input$range[2]
)
}
)
}
shinyApp(ui = ui, server = server)
library(maps)
install.packages("maps")
install.packages("mapproj")
library(maps)
library(mapproj)
source("census-app/helpers.R")
library(maps)
library(mapproj)
library(maps)
library(mapproj)
source("census-app/helpers.R")
library(maps)
library(mapproj)
source("census-app/helpers.R")
getwd()
setwd("/Users/patrick/files/data_analytics/jing_calendar/r_files")
getwd()
source("census-app/helpers.R")
counties <- readRDS("census-app/data/counties.rds")
percent_map(counties$white, "darkgreen", "% White")
library(maps)
library(mapproj)
source("helpers.R")
getwd()
setwd("/Users/patrick/files/data_analytics/jing_calendar/r_files/census-app")
source("helpers.R")
counties <- readRDS("data/counties.rds")
ui <- page_sidebar(
title = "censusVis",
sidebar = sidebar(
helpText(
"Create demographic maps with information from the 2010 US Census."
),
selectInput(
"var",
label = "Choose a variable to display",
choices =
c(
"Percent White",
"Percent Black",
"Percent Hispanic",
"Percent Asian"
),
selected = "Percent White"
),
sliderInput(
"range",
label = "Range of interest:",
min = 0,
max = 100,
value = c(0, 100)
)
),
ui <- page_sidebar(
title = "censusVis",
sidebar = sidebar(
helpText(
"Create demographic maps with information from the 2010 US Census."
),
selectInput(
"var",
label = "Choose a variable to display",
choices =
c(
"Percent White",
"Percent Black",
"Percent Hispanic",
"Percent Asian"
),
selected = "Percent White"
),
sliderInput(
"range",
label = "Range of interest:",
min = 0,
max = 100,
value = c(0, 100)
)
),
card(plotOutput("map"))
)
# Server logic ----
server <- function(input, output) {
server <- function(input, output) {
output$map <- renderPlot({
percent_map(counties$white, "grey", "% White")
})
}
shinyApp(ui, server)
# User interface ----
ui <- page_sidebar(
title = "censusVis",
sidebar = sidebar(
helpText(
"Create demographic maps with information from the 2010 US Census."
),
selectInput(
"var",
label = "Choose a variable to display",
choices =
c(
"Percent White",
"Percent Black",
"Percent Hispanic",
"Percent Asian"
),
selected = "Percent White"
),
sliderInput(
"range",
label = "Range of interest:",
min = 0,
max = 100,
value = c(0, 100)
)
),
card(plotOutput("map"))
)
# Server logic ----
server <- function(input, output) {
output$map <- renderPlot({
percent_map(counties$white, "darkgreen", "% White")
})
}
# Run app ----
shinyApp(ui, server)
server <- function(input, output) {
output$map <- renderPlot({
percent_map(counties$white, "blue", "% White")
})
}
shinyApp(ui, server)
server <- function(input, output) {
output$map <- renderPlot({
data <- switch(input$var,
"Percent White" = counties$white,
"Percent Black" = counties$black,
"Percent Hispanic" = counties$hispanic,
"Percent Asian" = counties$asian)
percent_map(var = data,
color = "darkgreen",
legend.title = "Demographic Map by Ethnic",
max = 100,
min = 0)
})
}
shinyApp(ui, server)
# Server logic ----
server <- function(input, output) {
output$map <- renderPlot({
data <- switch(input$var,
"Percent White" = counties$white,
"Percent Black" = counties$black,
"Percent Hispanic" = counties$hispanic,
"Percent Asian" = counties$asian)
percent_map(var = data,
color = "darkgreen",
legend.title = "Demographic Map by Ethnic",
max = input$range[1],
min = input$range[2])
})
}
# Server logic ----
server <- function(input, output) {
output$map <- renderPlot({
data <- switch(input$var,
"Percent White" = counties$white,
"Percent Black" = counties$black,
"Percent Hispanic" = counties$hispanic,
"Percent Asian" = counties$asian)
percent_map(var = data,
color = "darkgreen",
legend.title = "Demographic Map by Ethnic",
max = input$range[1],
min = input$range[2])
})
}
# Server logic ----
server <- function(input, output) {
output$map <- renderPlot({
data <- switch(input$var,
"Percent White" = counties$white,
"Percent Black" = counties$black,
"Percent Hispanic" = counties$hispanic,
"Percent Asian" = counties$asian)
percent_map(var = data,
color = "darkgreen",
legend.title = "Demographic Map by Ethnic",
max = input$range[1],
min = input$range[2])
})
}
shinyApp(ui, server)
shinyApp(ui, server)
# Server logic ----
server <- function(input, output) {
output$map <- renderPlot({
data <- switch(input$var,
"Percent White" = counties$white,
"Percent Black" = counties$black,
"Percent Hispanic" = counties$hispanic,
"Percent Asian" = counties$asian)
percent_map(var = data,
color = "darkgreen",
legend.title = input$var,
max = input$range[2],
min = input$range[1])
})
}
shinyApp(ui, server)
